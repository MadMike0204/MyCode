import numpy as np
from scipy.optimize import fsolve
from scipy.optimize import basinhopping,differential_evolution

def equations(variables):
    x,y,z,t = variables
    return [
            (((0.241-x)*111263)**2+((0.204-y)*97304)**2+(824-z)**2-(340*(100.767-t))**2 +

             ((0.780-x)*111263)**2+((0.456-y)*97304)**2+(727-z)**2-(340*(112.220-t))**2 +

             ((0.712-x)*111263)**2+((0.785-y)*97304)**2+(742-z)**2-(340*(188.020-t))**2 +

             ((0.047-x)*111263)**2+((0.121-y)*97304)**2+(575-z)**2-(340*(163.024-t))**2   )
 ]


bounds = [(-50, 50), (-50, 50), (100, 10000000), (20, 100)]  # 参数的界限
result = differential_evolution(equations,bounds,strategy='rand1exp',maxiter = 1000,disp=True,mutation=(0.1,1.5),polish=True,tol=0.000001,atol=1)
print("Solution found at:", result.x)
print("Objective function value:", result.fun)

'''
(((0.241-x)*111263)**2+((0.204-y)*97304)**2+(824-z)**2-(340*(100.767-t))**2 +

((0.780-x)*111263)**2+((0.456-y)*97304)**2+(727-z)**2-(340*(112.220-t))**2 +

((0.712-x)*111263)**2+((0.785-y)*97304)**2+(742-z)**2-(340*(188.020-t))**2 +

((0.047-x)*111263)**2+((0.121-y)*97304)**2+(575-z)**2-(340*(163.024-t))**2)
'''
'''
((0.241-x)*111263)**2+((0.204-y)*97304)**2+(824-z)**2-(340*(100.767-t))**2,

((0.780-x)*111263)**2+((0.456-y)*97304)**2+(727-z)**2-(340*(112.220-t))**2,

((0.712-x)*111263)**2+((0.785-y)*97304)**2+(742-z)**2-(340*(188.020-t))**2,

((0.047-x)*111263)**2+((0.121-y)*97304)**2+(575-z)**2-(340*(163.024-t))**2
'''